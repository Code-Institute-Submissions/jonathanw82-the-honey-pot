  def test_get_update_product(self):
        item = product.objects.create(name='The Honeypot Item')
        response = self.client.get(f'/update_product/{product.id}')
        self.assertEqual(response.status_code, 200)
        self.assertTemplateUsed(response, 'products/update_product.html')

    def test_can_add_product(self):
        response = self.client.post('/add_product', {'name': 'Test Added Item'})
        self.assertRedirects(response, 'products/add_product.html')

    def test_can_delete_item(self):
        item = product.objects.create(name='Test Honeypot Item')
        response = self.client.get(f'/delete/{product.id}')
        self.assertRedirects(response, 'all_products_admin')
        existing_items = product.objects.filter(id=product.id)
        self.assertEqual(len(existing_items), 0)


    def test_can_edit_item(self):
        item = product.objects.create(name='Test honeypot Item')
        response = self.client.post(f'/update_product/{product.id}',
                                    {'name': 'Updated Name'})
        self.assertRedirects(response, 'update_product')
        updated_item = product.objects.get(id=product.id)
        self.assertEqual(updated_item.name, 'Updated Name')
